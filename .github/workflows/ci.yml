name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  CGO_ENABLED: 0

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
          prefix: sample-foo/v

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.0
          args: -E gofmt,goimports --timeout 5m0s

  targets:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.services.outputs.services }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: services
        name: Get services
        run: echo "services=$(ls -1 cmd | tr '\n' ',' | sed 's/,$//' | jq -csR 'split(",")')" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: targets
    strategy:
      matrix:
        target: ${{ fromJson(needs.targets.outputs.services) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: ${{ matrix.target }}/v
      - name: Set envs for goreleaser
        run: |
          echo "GORELEASER_CURRENT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "GORELEASER_PREVIOUS_TAG=${{ steps.previoustag.outputs.tag }}" >> $GITHUB_ENV
      - name: Generate .goreleaser.yaml
        run: |
          SERVICE_NAME=${{ matrix.target }} envsubst < .goreleaser.yaml > .goreleaser.${{ matrix.target }}.yaml
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: build --snapshot -f .goreleaser.${{ matrix.target }}.yaml

  tagging:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - lint
      - targets
      - build
    strategy:
      matrix:
        target: ${{ fromJson(needs.targets.outputs.services) }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
      - uses: kobtea/release-tag-action@v0
        with:
          prefix: ${{ matrix.target }}/v
          version_file: ./cmd/${{ matrix.target }}/VERSION
